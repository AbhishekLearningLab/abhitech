{"version":3,"sources":["components/Layout.js","components/elements/Navbar.js","reducers/queryReducer.js","data/store.js","components/queries/QueryList.js","components/queries/AddQuery.js","actions/queryAction.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","Container","children","Navbar","className","to","intialState","queries","queryReducer","state","action","type","payload","store","createStore","composeWithDevTools","QueryList","useSelector","class","scope","map","q","firstname","surname","email","customer_query","AddQuery","history","useHistory","dispatch","useDispatch","useState","setName","setSurname","setEmail","query","setQuery","firstnameError","setNameErr","surnameError","setSurnameErr","emailError","setEmailErr","formValidation","isValid","trim","required","test","onSubmit","e","preventDefault","new_query","id","shortid","generate","addQuery","push","createQuery","placeholder","value","onChange","target","Object","keys","key","rows","App","exact","path","component","AddData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea3da84d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => (\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar shadow fixed-top navbar-expand-sm navbar-dark bg-primary\">\r\n            <Container>\r\n                <Link to=\"/sample1\" className=\"navbar-brand\">\r\n                    Customer Query Book\r\n                </Link>\r\n                <div>\r\n                    <Link to=\"/sample1/queries/add\" className=\"btn btn-light ml-auto\">\r\n                        Add Complaints\r\n                    </Link>\r\n                </div>\r\n            </Container>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import initialData from '../data/Queries.json';\r\n  \r\n  const intialState = {\r\n    queries: initialData\r\n  };\r\n  \r\n  export const queryReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n      case \"CREATE_QUERY\":\r\n        return {\r\n          ...state,\r\n          queries: [action.payload, ...state.queries],\r\n        };\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  }; \r\n\r\n  export default queryReducer;","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport queryReducer from \"../reducers/queryReducer\";\r\n\r\nconst store = createStore(queryReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction QueryList() {\r\n    const queries=useSelector((state) => state.queries);\r\n    \r\n    return (\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Surname</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Query</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>  \r\n                {\r\n                    queries.map(q=>(\r\n                        <tr>\r\n                            <td className=\"rowData\">{q.firstname}</td>\r\n                            <td className=\"rowData\">{q.surname}</td>\r\n                            <td className=\"rowData\">{q.email}</td>\r\n                            <td className=\"rowData\">{q.customer_query}</td>\r\n                        </tr>                \r\n                    ))\r\n                }              \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default QueryList\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { addQuery } from \"../../actions/queryAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AddQuery() {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [firstname, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const [firstnameError, setNameErr] = useState({});\r\n    const [surnameError, setSurnameErr] = useState({});\r\n    const [emailError, setEmailErr] = useState({});\r\n\r\n    const createQuery = (e) => {\r\n        e.preventDefault();\r\n        const new_query = {\r\n            id: shortid.generate(),\r\n            firstname: firstname,\r\n            surname: surname,\r\n            email: email,\r\n            customer_query: query\r\n            };\r\n        const isValid = formValidation();\r\n        if(isValid)\r\n        {\r\n            dispatch(addQuery(new_query));\r\n            history.push(\"/sample1\");\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n        \r\n      };\r\n    const formValidation = () => {\r\n        const firstnameError = {};\r\n        const surnameError = {};\r\n        const emailError = {};\r\n        let isValid = true;\r\n\r\n        if(!firstname.trim())\r\n        {\r\n            firstnameError.required=\"First name is required!\";\r\n            isValid=false;\r\n        }\r\n\r\n        if(!surname.trim())\r\n        {\r\n            surnameError.required=\"Surname is required!\";\r\n            isValid=false;\r\n        }\r\n        \r\n        if(email.trim() && (!/\\S+@\\S+\\.\\S+/.test(email)))\r\n        {\r\n            emailError.required=\"Invalid email address!\";\r\n            isValid=false;\r\n        }\r\n\r\n        setNameErr(firstnameError);\r\n        setSurnameErr(surnameError);\r\n        setEmailErr(emailError);\r\n        return isValid;\r\n    }\r\n    return (\r\n        <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header primary\">\r\n                <h5>New Complain</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(e) => createQuery(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your First Name\" \r\n                        value={firstname}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        />                        \r\n                    </div>\r\n                    {Object.keys(firstnameError).map(\r\n                            (key)=>{\r\n                                return <div className=\"text-danger\">{firstnameError[key]}</div>\r\n                            }\r\n                        )}\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Surname\" \r\n                        value={surname}\r\n                        onChange={(e)=>setSurname(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {Object.keys(surnameError).map(\r\n                            (key)=>{\r\n                                return <div className=\"text-danger\">{surnameError[key]}</div>\r\n                            }\r\n                        )}\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Email\" \r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {Object.keys(emailError).map(\r\n                            (key)=>{\r\n                                return <div className=\"text-danger\">{emailError[key]}</div>\r\n                            }\r\n                        )}\r\n                    <div className=\"form-group\">\r\n                        <textarea rows=\"4\" className=\"form-control\" placeholder=\"Queries / Complains?\" \r\n                        value={query}\r\n                        onChange={(e)=>setQuery(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddQuery\r\n","/*import {\r\n    CREATE_QUERY,\r\n    CLEAR_QUERY\r\n  } from \"../constant/types\";*/\r\n  \r\n  // actions\r\n  export const addQuery = (query) => ({\r\n    type: \"CREATE_QUERY\",\r\n    payload: query,\r\n  });\r\n \r\n  ","import './styles/App.scss';\nimport { Layout } from './components/Layout';\nimport Navbar from './components/elements/Navbar';\nimport store from './data/store';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport QueryList from './components/queries/QueryList';\nimport AddData from './components/queries/AddQuery';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar></Navbar>\n          <Layout>  \n            <div className=\"py-3\">\n            <Switch>\n                <Route exact path=\"/sample1\" component={QueryList} />\n                <Route exact path=\"/sample1/queries/add\" component={AddData} />\n              </Switch>\n            </div>\n          </Layout>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}